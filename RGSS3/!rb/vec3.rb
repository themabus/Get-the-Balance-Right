class Vec3
#============================================================================
  attr_accessor :x
  attr_accessor :y
  attr_accessor :z
  #--------------------------------------------------------------------------
  def initialize(x = 0, y = 0, z = 0)
    @x = x#.to_f
    @y = y#.to_f
    @z = z#.to_f
  end
  #--------------------------------------------------------------------------
  def norm
    return Math.sqrt(@x*@x + @y*@y + @z*@z)#.to_f
  end
  #--------------------------------------------------------------------------
  def normalized
    n = 1.0 / norm()
    return Vec3.new(@x * n, @y * n, @z * n)
  end
  #--------------------------------------------------------------------------
  def *(v)
    if v.is_a?(Vec3)
      return (@x*v.x + @y*v.y + @z*v.z)#.to_f
    else
      return Vec3.new(@x*v, @y*v, @z*v)
    end
  end
  #--------------------------------------------------------------------------
  def +(v)
    return Vec3.new(@x+v.x, @y+v.y, @z+v.z)
  end
  #--------------------------------------------------------------------------
  def -(v)
    return Vec3.new(@x-v.x, @y-v.y, @z-v.z)
  end
  #--------------------------------------------------------------------------
  def -@  # -Vec3
    return Vec3.new(-@x, -@y, -@z)
  end
#============================================================================
end
